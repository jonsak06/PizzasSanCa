/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Entidades.Cantidad;
import Entidades.Componente;
import Entidades.Producto;
import Entidades.Proveedor;
import Entidades.Receta;
import Persistencia.PersistenciaMateriales;
import java.util.Iterator;
import java.util.List;
import java.util.Objects;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manuel
 */
public class CrearReceta extends javax.swing.JFrame {
    
    /**
     * Creates new form CrearReceta
     */
    DefaultTableModel mdl0 ;
    public CrearReceta() {
        
        initComponents();
         mdl0  = (DefaultTableModel) tabla.getModel();
        List<Componente> componentes = PersistenciaMateriales.getInstance().listaComponentes();
        
        for(int i = 0; i<componentes.size(); i++)
        {
            comboComponentes.addItem(componentes.get(i));
        }
        
        List<Entidades.Receta> Recetas = PersistenciaMateriales.getInstance().listaRecetas();
        
        for(int i = 0; i<Recetas.size(); i++)
        {
            comboReceta.addItem(Recetas.get(i));
        }
        
        Entidades.Receta recetita  = (Entidades.Receta) comboReceta.getSelectedItem();
        
        
        
        List<Cantidad> cant = recetita.getCantidades();
        Object matris[][] = new String[cant.size()][3];
        
        for(int i=0; i<cant.size(); i++){
            matris[i][0] = cant.get(i).getComponente().getNombre();
            matris[i][1] = cant.get(i).getPorReceta().toString();
            matris[i][2] = cant.get(i).getId().toString();
            
        }
       
         tabla.setModel(new javax.swing.table.DefaultTableModel(
                           matris,
                           new String [] {
                               "Componente", "Cantidad", "id"
                           }
                       ) {
                           boolean[] canEdit = new boolean [] {
                               false, true, false
                           };

                           public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                           }
                       });
            
        tabla.getColumnModel().getColumn(2).setPreferredWidth(0); 
        tabla.getColumnModel().getColumn(2).setMaxWidth(0); 
        tabla.getColumnModel().getColumn(2).setMinWidth(0);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Nombre = new javax.swing.JTextField();
        crearReceta = new javax.swing.JButton();
        comboReceta = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        comboComponentes = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        Cantidad = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        Modificar = new javax.swing.JButton();
        añadirComponente = new javax.swing.JButton();
        EliminarCanridad = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        EliminarReceta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Receta");

        jLabel2.setText("Nombre");

        crearReceta.setText("Crear Receta");
        crearReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearRecetaActionPerformed(evt);
            }
        });

        comboReceta.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboRecetaItemStateChanged(evt);
            }
        });

        jLabel3.setText("Receta");

        jLabel4.setText("Añadir componentes a la receta");

        jLabel5.setText("Componente");

        jLabel6.setText("Cantidad");

        Cantidad.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.000"))));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cantidad", "id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(2).setMinWidth(0);
            tabla.getColumnModel().getColumn(2).setPreferredWidth(0);
            tabla.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        añadirComponente.setText("Anadir");
        añadirComponente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirComponenteActionPerformed(evt);
            }
        });

        EliminarCanridad.setText("Eliminar");
        EliminarCanridad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarCanridadActionPerformed(evt);
            }
        });

        jLabel7.setText("Lista de componentes en la receta seleccionada");

        EliminarReceta.setText("Eliminar Receta");
        EliminarReceta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarRecetaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(crearReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(93, 93, 93)
                                .addComponent(jLabel5)
                                .addGap(103, 103, 103)
                                .addComponent(jLabel6))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(Modificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EliminarCanridad)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(211, 211, 211))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(EliminarReceta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(123, 123, 123))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboReceta, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comboComponentes, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(añadirComponente)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(crearReceta)
                .addGap(11, 11, 11)
                .addComponent(jLabel4)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboReceta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboComponentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(añadirComponente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(EliminarReceta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Modificar)
                    .addComponent(EliminarCanridad))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        // TODO add your handling code here:
        
        int fila = tabla.getSelectedRow();
        Entidades.Receta recetita  = (Entidades.Receta) comboReceta.getSelectedItem(); 
        Long id = Long.parseLong(tabla.getValueAt(fila, 2).toString());
        Float cantidad = Float.parseFloat((String) tabla.getValueAt(fila, 1));
        
        for(int i = 0; i<recetita.getCantidades().size(); i++){
            if(Objects.equals(id, recetita.getCantidades().get(i).getId()))
            {
                recetita.getCantidades().get(i).setPorReceta(cantidad);
                PersistenciaMateriales.getInstance().persist(recetita.getCantidades().get(i));
            }
        }
        
        
        
        
        
    }//GEN-LAST:event_ModificarActionPerformed

    private void crearRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearRecetaActionPerformed
        // TODO add your handling code here:
        
        Receta receta = new Receta(Nombre.getText());
        
            PersistenciaMateriales.getInstance().persist(receta);
           comboReceta.addItem(receta);
        
    }//GEN-LAST:event_crearRecetaActionPerformed

    private void añadirComponenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirComponenteActionPerformed
        // TODO add your handling code here:
        
        Cantidad canti = new Cantidad( Float.parseFloat(Cantidad.getText()));
        canti.setReceta((Receta) comboReceta.getSelectedItem());
        canti.setComponente((Componente) comboComponentes.getSelectedItem());
        PersistenciaMateriales.getInstance().persist(canti);
        
        Entidades.Receta recetita  = (Entidades.Receta) comboReceta.getSelectedItem();
        recetita.addCantidad(canti);
       
        List<Cantidad> cant = recetita.getCantidades();
        Object matris[][] = new String[cant.size()][3];
        
        for(int i=0; i<cant.size(); i++){
            matris[i][0] = cant.get(i).getComponente().getNombre();
            matris[i][1] = cant.get(i).getPorReceta().toString();
            matris[i][2] = cant.get(i).getId().toString();
            
        }
       
         tabla.setModel(new javax.swing.table.DefaultTableModel(
                           matris,
                           new String [] {
                               "Componente", "Cantidad", "id"
                           }
                       ) {
                           boolean[] canEdit = new boolean [] {
                               false, true, false
                           };

                           public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                           }
                       });
            
        tabla.getColumnModel().getColumn(2).setPreferredWidth(0); 
        tabla.getColumnModel().getColumn(2).setMaxWidth(0); 
        tabla.getColumnModel().getColumn(2).setMinWidth(0);
    }//GEN-LAST:event_añadirComponenteActionPerformed

    private void comboRecetaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboRecetaItemStateChanged
        // TODO add your handling code here:
        Entidades.Receta recetita  = (Entidades.Receta) comboReceta.getSelectedItem();
        List<Cantidad> cant = recetita.getCantidades();
        Object matris[][] = new String[cant.size()][3];
        
        for(int i=0; i<cant.size(); i++){
            matris[i][0] = cant.get(i).getComponente().getNombre();
            matris[i][1] = cant.get(i).getPorReceta().toString();
            matris[i][2] = cant.get(i).getId().toString();
            
        }
       
         tabla.setModel(new javax.swing.table.DefaultTableModel(
                           matris,
                           new String [] {
                               "Componente", "Cantidad", "id"
                           }
                       ) {
                           boolean[] canEdit = new boolean [] {
                               false, true, false
                           };

                           public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                           }
                       });
            
        tabla.getColumnModel().getColumn(2).setPreferredWidth(0); 
        tabla.getColumnModel().getColumn(2).setMaxWidth(0); 
        tabla.getColumnModel().getColumn(2).setMinWidth(0);
        
    }//GEN-LAST:event_comboRecetaItemStateChanged

    private void EliminarCanridadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarCanridadActionPerformed
        // TODO add your handling code here:
        
        int fila = tabla.getSelectedRow();
        Entidades.Receta recetita  = (Entidades.Receta) comboReceta.getSelectedItem(); 
        Long id = Long.parseLong(tabla.getValueAt(fila, 2).toString());
        
        for(int i = 0; i<recetita.getCantidades().size(); i++){
            if(Objects.equals(id, recetita.getCantidades().get(i).getId()))
            {
                Cantidad f = recetita.getCantidades().get(i);
                PersistenciaMateriales.getInstance().delete(f);
                recetita.getCantidades().remove(f);
            }
        }
        
        List<Cantidad> cant = recetita.getCantidades();
        Object matris[][] = new String[cant.size()][3];
        
        for(int i=0; i<cant.size(); i++){
            matris[i][0] = cant.get(i).getComponente().getNombre();
            matris[i][1] = cant.get(i).getPorReceta().toString();
            matris[i][2] = cant.get(i).getId().toString();
            
        }
       
         tabla.setModel(new javax.swing.table.DefaultTableModel(
                           matris,
                           new String [] {
                               "Componente", "Cantidad", "id"
                           }
                       ) {
                           boolean[] canEdit = new boolean [] {
                               false, true, false
                           };

                           public boolean isCellEditable(int rowIndex, int columnIndex) {
                               return canEdit [columnIndex];
                           }
                       });
            
        tabla.getColumnModel().getColumn(2).setPreferredWidth(0); 
        tabla.getColumnModel().getColumn(2).setMaxWidth(0); 
        tabla.getColumnModel().getColumn(2).setMinWidth(0);
        
        
        
    }//GEN-LAST:event_EliminarCanridadActionPerformed

    private void EliminarRecetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarRecetaActionPerformed
        // TODO add your handling code here:
        
         Entidades.Receta recetita  = (Entidades.Receta) comboReceta.getSelectedItem(); 
         comboReceta.removeItem(recetita);
         PersistenciaMateriales.getInstance().delete(recetita);
         
    }//GEN-LAST:event_EliminarRecetaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearReceta().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField Cantidad;
    private javax.swing.JButton EliminarCanridad;
    private javax.swing.JButton EliminarReceta;
    private javax.swing.JButton Modificar;
    private javax.swing.JTextField Nombre;
    private javax.swing.JButton añadirComponente;
    private javax.swing.JComboBox<Componente> comboComponentes;
    private javax.swing.JComboBox<Receta> comboReceta;
    private javax.swing.JButton crearReceta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
